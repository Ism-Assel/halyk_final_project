swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: "Swagger Bookstore"
tags:
  - name: "book"
    description: "All about books"
  - name: "author"
    description: "All about authors"
  - name: "publisher"
    description: "All about publishers"
schemes:
  - "https"
paths:
  /books:
    get:
      tags:
        - "book"
      summary: "Show all books"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/Book"
        "405":
          description: "Invalid input"

    post:
      tags:
        - "book"
      summary: "Add a new book to the store"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Book object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/Book"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Book"
        "405":
          description: "Invalid input"

  /books/{bookID}:
    get:
      tags:
        - "book"
      summary: "Find book by ID"
      description: "Returns a single book"
      produces:
        - "application/json"
      parameters:
        - name: "bookID"
          in: "path"
          description: "ID of book to return"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Book"
        "404":
          description: "Book not found"

    put:
      tags:
        - "book"
      summary: "Updates a book in the store"
      produces:
        - "application/json"
      parameters:
        - name: "bookID"
          in: "path"
          description: "ID of book that needs to be updated"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Book object that needs to be updated to the store"
          required: true
          schema:
            $ref: "#/definitions/Book"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Book"
        "405":
          description: "Invalid input"

    delete:
      tags:
        - "book"
      summary: "Deletes a book"
      description: ""
      produces:
        - "application/json"
      parameters:
        - name: "bookID"
          in: "path"
          description: "Book ID to delete"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "404":
          description: "Book not found"

  /authors:
    get:
      tags:
        - "author"
      summary: "Show all authors"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/Author"
        "405":
          description: "Invalid input"

    post:
      tags:
        - "author"
      summary: "Add a new author to the store"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Author object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/Author"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Author"
        "405":
          description: "Invalid input"

  /authors/{authorID}:
    get:
      tags:
        - "author"
      summary: "Find author by ID"
      description: "Returns a single author"
      produces:
        - "application/json"
      parameters:
        - name: "authorID"
          in: "path"
          description: "ID of author to return"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Author"
        "404":
          description: "Author not found"

    put:
      tags:
        - "author"
      summary: "Updates a author in the store with form data"
      description: ""
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
        - name: "authorID"
          in: "path"
          description: "ID of book that needs to be updated"
          required: true
          type: "integer"
          format: "int64"
        - name: "name"
          in: "formData"
          description: "Updated title of the book"
          required: false
          type: "string"
        - name: "surname"
          in: "formData"
          description: "Updated publisher of the book"
          required: false
          type: "string"
        - name: "lastname"
          in: "formData"
          description: "Updated number of pages of the book"
          required: false
          type: "string"
        - name: "dateOfBirth"
          in: "formData"
          description: "Updated year of the book"
          required: false
          type: "integer"
        - name: "books"
          in: "formData"
          description: "Updated listBook of the book"
          required: false
          type: "string"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Author"
        "405":
          description: "Invalid input"

    delete:
      tags:
        - "author"
      summary: "Delete a author"
      description: ""
      produces:
        - "application/json"
      parameters:
        - name: "authorID"
          in: "path"
          description: "Book id to delete"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "404":
          description: "Book not found"

  /publishers:
    get:
      tags:
        - "publisher"
      summary: "Show all publishers"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/Publisher"
        "405":
          description: "Invalid input"

    post:
      tags:
        - "publisher"
      summary: "Add a new publisher to the store"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Publisher object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/Publisher"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Publisher"
        "405":
          description: "Invalid input"


  /publishers/{publisherID}:
    get:
      tags:
        - "publisher"
      summary: "Find publisher by ID"
      description: "Returns a single publisher"
      produces:
        - "application/json"
      parameters:
        - name: "publisherID"
          in: "path"
          description: "ID of publisher to return"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Publisher"
        "404":
          description: "Author not found"

    put:
      tags:
        - "publisher"
      summary: "Updated publisher"
      description: ""
      produces:
        - "application/json"
      parameters:
        - name: "publisherID"
          in: "path"
          description: "ID of publisher that needs to be updated"
          required: true
          type: "integer"
        - in: "body"
          name: "body"
          description: "Updated publisher object"
          required: true
          schema:
            $ref: "#/definitions/Publisher"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Publisher"
        "400":
          description: "Invalid user supplied"
        "404":
          description: "Publisher not found"

    delete:
      tags:
        - "publisher"
      summary: "Delete a publisher"
      description: ""
      produces:
        - "application/json"
      parameters:
        - name: "publisherID"
          in: "path"
          description: "Publisher id to delete"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "404":
          description: "Book not found"

definitions:
  Book:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      price:
        type: "number"
        format: "double"
      authorList:
        type: "array"
        items:
          $ref: "#/definitions/Author"
      publisher:
        $ref: "#/definitions/Publisher"
      title:
        type: "string"
        format: "byte"
      pages:
        type: "integer"
        format: "int64"
      publicationYear:
        type: "integer"
        format: "int64"
  Author:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        format: "byte"
      surname:
        type: "string"
        format: "byte"
      lastname:
        type: "string"
        format: "byte"
      dateOfBirth:
        type: "string"
        format: "date"
      books:
        type: "array"
        items:
          $ref: "#/definitions/Book"
  Publisher:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        format: "byte"
      books:
        type: "array"
        items:
          $ref: "#/definitions/Book"

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"









